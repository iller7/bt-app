{"version":3,"sources":["main.js"],"names":["btApp","theTextArea","document","getElementById","thePopulateButton","theResetButton","theGenerateButton","init","addEventListener","e","preventDefault","populateRandomText","resizer","customValidator","addMultipleEventListener","classList","length","transformLabel","resetTextarea","addConsoleMessage","thisValue","value","toLowerCase","trim","thisValueLength","isNumeric","commaCount","replace","fullStopCount","wordArray","split","wordArrayCount","labelReporter","matches","match","buildTable","sort","n","isNaN","parseFloat","isFinite","el","s","fn","evts","i","iLen","randomText","RandomText","type","TEXT","query","createLorem","removeTable","table","getElementsByTagName","parentNode","removeChild","add","autofocus","reporter","emptyStr","classState","thisMessage","nextElementSibling","innerHTML","className","remove","countOccurence","someArray","classifier","reduce","counter","item","p","hasOwnProperty","countLetter","charAt","polyCounterAlternative","obj1","Object","keys","map","key","populateTable","rows","cellsCount","obj2","createElement","thead","tbody","thRow","headerLetter","headerCount","headerText","appendChild","cells","createTextNode","tbodyContainer","letterCountArray","letterCountObj","currentLetter","filteredObj","filter","m","currentWord","currentWordCount","row","k","wordCountObj","numberOfColumns","maxNumberOfRows","Math","max","apply","tableHtml","resize","style","height","scrollHeight","delayedResize","window","setTimeout","console","log","test"],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\nvar btApp = (function () {\n  const theTextArea = document.getElementById('someText');\n  const thePopulateButton = document.getElementById('populate');\n  const theResetButton = document.getElementById('reset');\n  const theGenerateButton = document.getElementById('generate');\n\n  var init = function () {\n\n    // Event Handlers for the input fields\n    if (thePopulateButton) {\n      thePopulateButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        populateRandomText(e);\n        resizer(e);\n        customValidator();\n      });\n\n      addMultipleEventListener(theTextArea, 'blur, click, touchstart, focus, change, keyup, paste', function (e) {\n        if (!theTextArea.classList.length)\n          transformLabel(this, e);\n      });\n\n      addMultipleEventListener(theTextArea, 'change, keyup, cut, paste', function (e) {\n        resizer(e);\n      });\n    }\n\n    if (theResetButton) {\n      theResetButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        resetTextarea();\n        resizer(e);\n      });\n    }\n\n    if (theGenerateButton) {\n      theGenerateButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        customValidator();\n      });\n    }\n\n    // Run on load - populate the label/placeholder\n    transformLabel(theTextArea);\n    addConsoleMessage();\n  };\n\n  // Public Methods\n\n  // Custom Validator\n  var customValidator = function () {\n    let thisValue = theTextArea.value.toLowerCase().trim();\n    let thisValueLength = thisValue.length;\n\n    if (thisValueLength) {\n      // Something was entered in the field\n      if (!isNumeric(thisValue)) {\n        let commaCount = thisValueLength - thisValue.replace(/[\\,]/g, '').length;\n        let fullStopCount = thisValueLength - thisValue.replace(/[\\.]/g, '').length;\n        let wordArray = thisValue.replace(/[\\,\\.]/g, ' ').replace(/[^\\w\\s]/gi, '').trim().split(/[\\s,]+/);\n        let wordArrayCount = wordArray.length;\n\n        if (wordArrayCount > 500) {\n          // Too many words entered\n          labelReporter('Please limit your content to 500 words', false);\n        } else if (wordArrayCount < 5) {\n          // Not enough words entered\n          labelReporter('You need to add more than 5 words', false);\n        } else {\n          // Nearly there, now we need to check that there are no numbers within the string\n          let matches = thisValue.match(/\\d+/g);\n          if (matches !== null) {\n            labelReporter('The content supplied contains a number, please modify and try again', false);\n          } else {\n            // Looking good, now we can begin building the table\n            labelReporter('Please wait, building the table with ' + wordArrayCount + ' entries now', false, 'valid');\n            buildTable(wordArray.sort(), commaCount, fullStopCount);\n          }\n        }\n      } else if (isNumeric(thisValue)) {\n        // They supplied a number\n        labelReporter('Sorry, no numbers allowed', false);\n      } else {\n        // Shouldn't reach here\n        labelReporter('Sorry, that\\'s not valid, please try again.', false);\n      }\n    } else {\n      // Field is empty\n      labelReporter('You need to write something in the box below', false);\n    }\n\n    function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    return false;\n  };\n\n  // Private Helpers\n\n  // Add multiple event listeners in native js\n  var addMultipleEventListener = function (el, s, fn) {\n    let evts = s.split(',');\n    for (let i = 0, iLen = evts.length; i < iLen; i++) {\n      el.addEventListener(evts[i].trim(), fn, false);\n    }\n  };\n\n  // Use the RandomText class to generate some text\n  var populateRandomText = function (e) {\n    let randomText = new RandomText();\n    randomText.type = RandomText.TEXT;\n    randomText.query = '1p';\n    randomText.createLorem(theTextArea);\n    transformLabel(theTextArea, e);\n  };\n\n  // Reset the text area to empty\n  var resetTextarea = function (e) {\n    theTextArea.value = '';\n    removeTable();\n    transformLabel(theTextArea, e);\n  };\n\n  var removeTable = function (e) {\n    let table = document.getElementsByTagName('table')[0];\n    if (table) table.parentNode.removeChild(table);\n    document.getElementById('testResults').classList.add('hide');\n  };\n\n  // Add some css tranformation and animation\n  var transformLabel = function (el, e = null) {\n    if (el) {\n      if (el.value.length > 0 || el.autofocus) {\n        labelReporter('Enter at least 5 words, but no more than 500 words please.', false, 'valid');\n      }\n      else {\n        labelReporter('Please enter your text here...', true, '');\n      }\n    }\n  };\n\n  // Messaging via the label\n  var labelReporter = function (reporter, emptyStr, classState = 'invalid') {\n    let thisMessage = theTextArea.nextElementSibling;\n    thisMessage.innerHTML = reporter;\n    theTextArea.className = '';\n    if (classState)\n      theTextArea.classList.add(classState);\n    emptyStr ? theTextArea.classList.remove('validate') : theTextArea.classList.add('validate');\n    emptyStr ? theTextArea.nextElementSibling.classList.remove('active') : theTextArea.nextElementSibling.classList.add('active');\n  };\n\n  // Display the array into a sorted table\n  var buildTable = function (wordArray, commaCount, fullStopCount) {\n\n    // Find the count of all words\n    let countOccurence = function (someArray, classifier) {\n      return someArray.reduce(function (counter, item) {\n        var p = item;\n        counter[p] = counter.hasOwnProperty(p) ? counter[p] + 1 : 1;\n        return counter;\n      }, {});\n    };\n\n    // Find the count of all letters\n    let countLetter = function (someArray) {\n      return someArray.reduce(function (counter, item) {\n        var p = item.charAt(0);\n        counter[p] = counter.hasOwnProperty(p) ? counter[p] + 1 : 1;\n        return counter;\n      }, {});\n    };\n\n    // Issue with using Object.values polyfill\n    let polyCounterAlternative = function (obj1, i = 0) {\n      return Object.keys(obj1).map(key => obj1[key])[i];\n    };\n\n    // Table factory\n    let populateTable = function (rows, cellsCount, obj1, obj2) {\n      removeTable();\n      let table = document.createElement('table');\n      let thead = document.createElement('thead');\n      let tbody = document.createElement('tbody');\n      let thRow = document.createElement('tr');\n\n      // Populate the thead with the letter and count per letters\n      for (let i = 0; i < cellsCount; i++) {\n        let headerLetter = Object.keys(obj1)[i];\n\n        // polyfill causing issues :( going old school\n        // let headerCount = Object.values(obj1)[i];\n        let headerCount = polyCounterAlternative(obj1, i);\n        let headerText = (headerCount > 1) ? `${headerLetter} (${headerCount})` : `${headerLetter}`;\n\n        thRow.appendChild(document.createElement('th'));\n        thRow.cells[i].appendChild(document.createTextNode(headerText));\n      }\n\n      // Last column: Display the punctuations\n      if (commaCount || fullStopCount) {\n        thRow.appendChild(document.createElement('th'));\n        thRow.cells[cellsCount].appendChild(document.createTextNode(`Punctuations (${commaCount + fullStopCount})`));\n        thRow.cells[cellsCount].classList.add('punctuations');\n      }\n\n      // Create a table with just the thead created and an empty tbody\n      thead.appendChild(thRow);\n      table.appendChild(thead);\n      table.appendChild(tbody);\n      document.getElementById('generatedTable').appendChild(table);\n\n      var tbodyContainer = document.getElementsByTagName('tbody')[0];\n      let letterCountArray = polyCounterAlternative(letterCountObj); //Object.keys(letterCountObj).map(function (key) { return letterCountObj[key]; });\n\n      // Top level loop: Start with all the available letters in the column      \n      for (let n = 0; n < Object.keys(obj1).length; n++) {\n        let currentLetter = Object.keys(obj1)[n];\n        let filteredObj = Object.keys(obj2).filter(function (el) {\n          return el.charAt(0) == currentLetter;\n        });\n\n        // Given the currentLetter, populate each word into that row\n        for (let m = 0; m < filteredObj.length; m++) {\n          let currentWord = filteredObj[m];\n          let currentWordCount = obj2[currentWord];\n\n          // Row doesn't exist yet so we need to create it\n          if (!tbodyContainer.rows[m]) {\n            let row = document.createElement('tr');\n            for (let k = 0; k <= cellsCount; k++) {\n              row.appendChild(document.createElement('td'));\n              row.cells[k].appendChild(document.createTextNode(''));\n            }\n            tbody.appendChild(row);\n          }\n\n          tbodyContainer.rows[m].cells[n].innerHTML = currentWord;\n          if (currentWordCount > 1)\n            tbodyContainer.rows[m].cells[n].innerHTML += `<strong>(${currentWordCount})</strong>`;\n        }\n      }\n      // Final Column, add the punctuations\n      let p = 0;\n      if (commaCount) {\n        tbodyContainer.rows[p].cells[tbodyContainer.rows[0].cells.length - 1].innerHTML += `\",\" <strong>(${commaCount})</strong>`;\n        p++;\n      }\n      if (fullStopCount) {\n        tbodyContainer.rows[p].cells[tbodyContainer.rows[0].cells.length - 1].innerHTML += `\".\" <strong>(${fullStopCount})</strong>`;\n        p++;\n      }\n    }\n\n    // Build up the variables\n    let wordCountObj = countOccurence(wordArray);\n    let letterCountObj = countLetter(wordArray);\n    let numberOfColumns = Object.keys(letterCountObj).length;\n    // let letterCountArray = Object.keys(letterCountObj).map(function (key) { return letterCountObj[key]; });\n    let maxNumberOfRows = Math.max.apply(null, Object.keys(wordCountObj).map(function (key) { return wordCountObj[key]; }));\n\n    let tableHtml = populateTable(maxNumberOfRows, numberOfColumns, letterCountObj, wordCountObj);\n    document.getElementById('testResults').classList.remove('hide');\n    labelReporter('Table built successfully! Please feel free to modify the text and select \"Generate\"', false, 'valid');\n  };\n\n  // Resize the textarea to handle the content within\n  var resizer = function (e) {\n    function resize() {\n      theTextArea.style.height = 'auto';\n      theTextArea.style.height = theTextArea.scrollHeight + 'px';\n    }\n    /* 0-timeout to get the already changed text */\n    function delayedResize() {\n      window.setTimeout(resize, 0);\n    }\n    //theTextArea.focus();\n    delayedResize();\n  }\n\n  // Serves no real purpose, but hello dev person!\n  var addConsoleMessage = function () {\n    if (typeof console !== 'undefined' && typeof console.log === 'function' && !window.test) {\n      console.log(`\n      %c                 *         .--.\n      %c                          \\/ \\/  '\n      %c *                       | |\n      %c                          \\\\ \\\\__,\n      %c             *         +   \\'--\\'  *\n      %c                 +   \\/\\\\\n      %c    +              .\\'  \\'.   *\n      %c           *      \\/======\\\\      +\n      %c                 ;:.  _   ;\n      %c                 |:. (_)  |\n      %c                 |:.  _   |\n      %c       +         |:. (_)  |          *\n      %c                 ;:.      ;\n      %c               .\\' \\\\:.    \\/ '.\n      %c              \\/ .-\\'\\':._.\\''-. \\\\\n      %c              |\\/    \\/||\\\\    \\\\|\n      %c            _..--\\\"\\\"\\\"''''\\\"\\\"\\\"--.._\n      %c      _.-\\'''                    ''\\'-._\n      %c    -\\'        %cHello, BT Person%c        \\'-\n      %c \n      %c Hi, this is Faizal, Hope you like the code!`,\n        'color:#D0E3F1', 'color:#D0E3F1', 'color:#C0DAEC', 'color:#C0DAEC', 'color:#B0D1E8', 'color:#B0D1E8', 'color:#A1C7E3', 'color:#A1C7E3', 'color:#91BEDE', 'color:#91BEDE', 'color:#81B5D9', 'color:#81B5D9', 'color:#72ABD5', 'color:#72ABD5', 'color:#62A2D0', 'color:#62A2D0', 'color:#5299CB', 'color:#5299CB', 'color:#4390C7', 'color:#4390C7', 'color:#4390C7', 'color: #eaeaff', 'color: #60d671');\n    }\n  }\n  return {\n    init: init,\n    customValidator: customValidator\n  };\n})();\nbtApp.init();"]}